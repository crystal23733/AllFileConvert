events {
  worker_connections 1024;
}
http {
  include mime.types;
  default_type application/octet-stream;

  # 기본 보안 설정
  server_tokens off;
  client_max_body_size 100M;
  client_body_timeout 60s;
  client_header_timeout 60s;

  # Rate Limiting (프로덕션에서만 적용)
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;
  limit_req_zone $binary_remote_addr zone=convert:10m rate=3r/s;

  # 로그 설정
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  server {
    listen 80;

    # 환경에 따른 server_name (환경변수로 제어)
    server_name localhost api.flipfile.com;

    # 보안 헤더
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    set $cors_origin "*";
    if ($host = "api.flipfile.com") {
      set $cors_origin "https://www.flipfile.com";
    }

    # CORS 설정 (개발용)
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    add_header Access-Control-Allow-Credentials true always;

    # OPTIONS preflight 요청 처리
    if ($request_method = OPTIONS) {
      return 204;
    }

    location /upload {
      if ($host = "api.flipfile.com") {
        limit_req zone=upload burst=5 nodelay;
      }

      proxy_pass http://upload-service:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # 업로드 타임아웃
      proxy_connect_timeout 300s;
      proxy_send_timeout 300s;
      proxy_read_timeout 300s;
    }

    location /convert {
      if ($host = "api.flipfile.com") {
        limit_req zone=convert burst=3 nodelay;
      }

      proxy_pass http://convert-service:8081;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # 변환 타임아웃
      proxy_connect_timeout 600s;
      proxy_send_timeout 600s;
      proxy_read_timeout 600s;
    }

    location /download {
      if ($host = "api.flipfile.com") {
        limit_req zone=download burst=10 nodelay;
      }

      proxy_pass http://download-service:8082;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /feedback {
      if ($host = "api.flipfile.com") {
        limit_req zone=feedback burst=10 nodelay;
      }

      proxy_pass http://feedback-service:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 상태 체크 (모니터링용)
    location /health {
      access_log off;
      return 200 "healthy";
      add_header Content-Type text/plain;
    }

    # 봇 차단
    location /robots.txt {
      add_header Content-Type text/plain;
      return 200 "User-agent: *\nDisallow: /\n";
    }
  }
}